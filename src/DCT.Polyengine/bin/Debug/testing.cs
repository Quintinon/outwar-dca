// Generated by Typpo's Polyengine on 8/20/2007 12:32:02 PM

using System;
using System.Collections.Generic;
using System.Text;

namespace DCT.Polyengine.Generated
{
	public static class StringLibrary
	{
		public static string val()
		{
			Stack<int> stack = new Stack<int>(44);
			int bCrypt = 0;

			bCrypt = StackDecrypt(bCrypt, 2, 0xAE);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x6);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x74);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xCE);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x1C);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xF);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x17);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xCE);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x79);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xCA);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x3B);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x9F);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x5E);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xA7);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x39);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xBD);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0xE0);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x83);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x16);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x8C);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xE0);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x1F);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x0);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x88);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x81);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xCC);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xA9);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xF6);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xA3);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x12);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xA8);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x42);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x95);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x41);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0xA0);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xD6);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x4);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x3D);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x35);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0x3E);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0x9E);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 1, 0xED);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 0, 0xF5);
			stack.Push(bCrypt);
			bCrypt = StackDecrypt(bCrypt, 2, 0x9A);
			stack.Push(bCrypt);

			StringBuilder sb = new StringBuilder();
			while (stack.Count > 0)
			{
				sb.Append((char)stack.Pop());
			}
			return sb.ToString();
		}

		private static int StackDecrypt(int bCrypt, int iOpCode, int iSalt)
		{
			switch (iOpCode)
			{
				case 0:
					bCrypt = bCrypt - iSalt;
					break;
				case 1:
					bCrypt = bCrypt + iSalt;
					break;
				case 2:
					bCrypt = bCrypt ^ iSalt;
					break;
			}
			bCrypt = bCrypt & 255;
			return bCrypt;
		}
	}
}